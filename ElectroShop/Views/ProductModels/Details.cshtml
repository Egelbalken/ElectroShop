@model ElectroShop.Models.ProductModel

@{
    ViewData["Title"] = "Details";
}


<div class="jumbotron">
    <h4> Product Details</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Price)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Price)
        </dd>
    </dl>

    <div class="container">
        <form id="review-form" name="rate" method="post">
            <div class="rate form-group" name="rate">
                <input type="radio" id="star5" name="rate" value="5" /><label for="star5" title="text">5 stars</label>
                <input type="radio" id="star4" name="rate" value="4" /><label for="star4" title="text">4 stars</label>
                <input type="radio" id="star3" name="rate" value="3" /><label for="star3" title="text">3 stars</label>
                <input type="radio" id="star2" name="rate" value="2" /><label for="star2" title="text">2 stars</label>
                <input type="radio" id="star1" name="rate" value="1" /><label for="star1" title="text">1 star</label>
            </div>
            <div name="review" form-group form-control">
                <input type="text" class="form-control" placeholder="tilte" name="title"/>
                <textarea id="text" class="form-control" placeholder="review" rows="3" name="review"></textarea>
            </div>
            <button id="buttonSubmit" type="submit" class="shadow btn btn-primary" name="rate">Review Submit</button>
        </form>

        <hr />
        @* The description list of all the reviews. *@
        <div id="reviews"></div>
    </div>
</div>
<div>
    <a class="shadow btn btn-secondary mx-1" asp-controller="ShoppingCart" asp-action="AddToShoppingCart" asp-route-productId="@Model.ProductId">Add to cart</a>
    <a class="shadow btn btn-primary mx-1" asp-action="Index">Back to List</a>
</div>

@section Scripts
{ 
    <script>
        $(function () {
            let productId = @(Model.ProductId);

            // Append the title as well as the review to the description list.
            const addReviewItem = function(reviewData) {
                $("#reviews").append(`
                <div class="card" style="400px; margin:auto;">
                    <div class="card-body">
                        <h5 class="card-title">${reviewData.title}</h5>
                        <p class="card-text">${reviewData.review}</p>
                    </div>
                </div>`);
            }

            // Appends all reviews of the products to the review description list.
            const appendToReviewList = function (reviews) {
                // Iterate through each review, and retrieve all the individual review.
                $.each(reviews, (i, review) => {
                    // Add the review data to the review description list.
                    addReviewItem(review);
                });
            }

            // Call our Product Api controller and get all reviews using Ajax.
            // If the GET request was successful, append all review to the review description list.
            $.ajax
                ({
                    type: "GET",
                    url: `/api/Product/GetReviews/${productId}`,
                    dataType: "json",
                    success: appendToReviewList,
                    error: (data) => { console.log("An error occured while requesting the reviews of the product."); }
                });

            $("#buttonSubmit").click(event => {
                // When submitting the form, prevent .NET default action posting.
                event.preventDefault();

                // Get the values from the form element.
                let reviewForm = $("#review-form")[0];
                // Translate the form values into key/value pairs.
                let reviewData = new FormData(reviewForm);

                // Append the product ID with the key 'productId'
                reviewData.append("productId", productId);

                $.ajax
                    ({
                        type: "POST",
                        url: `/api/Product/PostReview`,
                        // Convert the review data to a JSON object.
                        data: JSON.stringify(Object.fromEntries(reviewData)),
                        contentType: "application/json",
                        // If successful, add the review data returned from the API.
                        success: (data) => {
                            console.log(`Sucessfully posted the data.`);
                            addReviewItem(data);
                        },
                        statusCode: {
                            // HTTP status code 400 bad request: the form is most likely not valid.
                            400: () => {
                                alert(`Please check if the form is complete.`);
                            },
                            // HTTP status code 401 unauthorized: the user either not logged in or not authorized.
                            401: () => {
                                alert(`Please log in to post a review.`);
                            },
                        }
                    });
            });

        });
    </script>
}
